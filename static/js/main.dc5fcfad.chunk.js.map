{"version":3,"sources":["components/Carousel.tsx","api/images.ts","App.tsx","index.tsx"],"names":["Carousel","state","position","slideRight","props","step","infinite","frameSize","maxPosition","images","length","setState","slideLeft","minPosition","this","itemWidth","animationDuration","leftDisabled","righttDisabled","className","style","width","transition","map","image","transform","src","alt","indexOf","type","disabled","onClick","Component","App","changeValue","event","target","name","value","htmlFor","id","min","max","onChange","checked","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc5fcfad.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\ntype State = {\n  position: number,\n};\n\nexport class Carousel extends Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  slideRight = () => {\n    const { position } = this.state;\n\n    const {\n      step,\n      infinite,\n      frameSize,\n      images,\n    } = this.props;\n\n    const maxPosition = -(images.length - frameSize);\n\n    this.setState({\n      position: position - step > maxPosition ? position - step : maxPosition,\n    });\n\n    if (position === maxPosition && infinite) {\n      this.setState({\n        position: 0,\n      });\n    }\n  };\n\n  slideLeft = () => {\n    const { position } = this.state;\n\n    const {\n      step,\n      frameSize,\n      images,\n      infinite,\n    } = this.props;\n\n    const minPosition = (images.length - frameSize);\n\n    this.setState({\n      position: position + step < 0 ? position + step : 0,\n    });\n\n    if (position === 0 && infinite) {\n      this.setState({\n        position: -minPosition,\n      });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n\n    const maxPosition = -(images.length - frameSize);\n    const leftDisabled = position === 0 && !infinite;\n    const righttDisabled = position === maxPosition && !infinite;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${itemWidth * frameSize}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${position * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`${images.indexOf(image) + 1}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            data-cy=\"prev\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={leftDisabled}\n            onClick={this.slideLeft}\n          >\n            &#8678;\n          </button>\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            disabled={righttDisabled}\n            onClick={this.slideRight}\n          >\n            &#8680;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","export default [\n  './img/1.png',\n  './img/2.png',\n  './img/3.png',\n  './img/4.png',\n  './img/5.png',\n  './img/6.png',\n  './img/7.png',\n  './img/8.png',\n  './img/9.png',\n  './img/10.png',\n];\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport images from './api/images';\n\ninterface State {\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeValue = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [event.target.name]: +event.target.value,\n    }));\n  };\n\n  render() {\n    const {\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\" className=\"App__title\"> Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <form className=\"App__form\">\n          <label htmlFor=\"stepId\">\n            Step:&#160;\n            <input\n              type=\"number\"\n              name=\"step\"\n              id=\"stepId\"\n              min={1}\n              step={1}\n              max={images.length}\n              value={step}\n              onChange={this.changeValue}\n            />\n          </label>\n          <label htmlFor=\"frameId\">\n            FrameSize:&#160;\n            <input\n              type=\"number\"\n              name=\"frameSize\"\n              id=\"frameId\"\n              min={1}\n              step={1}\n              max={images.length}\n              value={frameSize}\n              onChange={this.changeValue}\n            />\n          </label>\n          <label htmlFor=\"itemId\">\n            ItemWidth:&#160;\n            <input\n              type=\"number\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              min={30}\n              step={10}\n              max={300}\n              value={itemWidth}\n              onChange={this.changeValue}\n            />\n          </label>\n          <label htmlFor=\"animationId\">\n            AnimationDuration:&#160;\n            <input\n              type=\"number\"\n              name=\"animationDuration\"\n              id=\"animationId\"\n              min={100}\n              step={100}\n              max={5000}\n              value={animationDuration}\n              onChange={this.changeValue}\n            />\n          </label>\n          <label htmlFor=\"infinite\">\n            Infinite:&#160;\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              name=\"infinite\"\n              onChange={(event) => {\n                this.setState({\n                  infinite: event.target.checked,\n                });\n              }}\n            />\n          </label>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}